#!/bin/bash

API_BASE_URL="https://pokeapi.co/api/v2/pokemon/"
OUTPUT_DIR="pokemon_data"
REQUEST_DELAY=5
MAX_RETRIES=3
ERROR_LOG="pokemon_errors.txt"

POKEMON_LIST=("bulbasaur"
    "ivysaur"
    "venusaur"
    "charmander"
    "charmeleon"
)

log_error() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$ERROR_LOG"
    echo "Error: $1"
}

#function to validate pokemon name
validate_pokemon_name() {
    local name="$1"
    if [[ ! "$name" =~ ^[A-Za-z]+$ ]]; then
        log_error "Invalid Pokemon name: $name"
        return 1
    fi
    return 0
}

check_json_response() {
    local file ="$1"
    if jq empty "$file" 2>/dev/null; then
        return 0
    else 
        return 1
    fi
}

fetch_pokemon_data() {
    local pokemon_name="$1"
    local lower_case_name=$(echo "$pokemon_name" | tr '[:upper:]' '[:lower:]')
    local url="${API_BASE_URL}${lower_case_name}/"
    local output_file="${OUTPUT_DIR}/${pokemon_name}.json"

    mkdir -p "$OUTPUT_DIR"

    echo "Fetching data for $pokemon_name..."

    for ((i=1; i<=MAX_RETRIES; i++)); do
        if curl -s "$url" -o "$output_file"; then
            if check_json_response "$output_file"; then
                echo "Data for $pokemon_name saved to $output_file"
                return 0
            else
                log_error "Invalid JSON response for $pokemon_name"
                rm -f "$output_file"
            fi
        else 
            log_error "Attempt $i: Failed to fetch data for $pokemon_name"
        fi
        
        if [ $i -lt $MAX_RETRIES ]; then
            echo "Retrying in $REQUEST_DELAY seconds..."
            sleep "$REQUEST_DELAY"
        fi
    done

    log_error "Failed to fetch data for $pokemon_name after $MAX_RETRIES attempts"
    return 1
}

main() {
    # clear or create error log 
    > "$ERROR_LOG"

    local success_count=0
    local total_count=${#POKEMON_LIST[@]}

    echo "Starting data fetch for ${total_count} Pokémon..."

    for pokemon in "${POKEMON_LIST[@]}"; do
        if validate_pokemon_name "$pokemon"; then
            if fetch_pokemon_data "$pokemon"; then
                ((success_count++))
            fi
        else
            log_error "Skipping invalid Pokémon name: $pokemon"
        fi
    done

    echo "Data fetch completed. Successfully fetched data for $success_count out of $total_count Pokémon."

    if [ -s "$ERROR_LOG" ]; then
        echo "Errors encountered during the process. Check $ERROR_LOG for details."
    else
        echo "No errors encountered."
    fi
}

main


